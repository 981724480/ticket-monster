diff --git ../demo/src/main/java/org/jboss/jdf/examples/view/PerformanceBean.java ../demo/src/main/java/org/jboss/jdf/examples/view/PerformanceBean.java
index 6911464..1af4da6 100644
--- ../demo/src/main/java/org/jboss/jdf/examples/view/PerformanceBean.java
+++ ../demo/src/main/java/org/jboss/jdf/examples/view/PerformanceBean.java
@@ -24,7 +24,10 @@ import javax.persistence.criteria.CriteriaQuery;
 import javax.persistence.criteria.Predicate;
 import javax.persistence.criteria.Root;
 
+import org.jboss.jdf.example.ticketmonster.model.Booking;
 import org.jboss.jdf.example.ticketmonster.model.Performance;
+import org.jboss.jdf.example.ticketmonster.model.Section;
+import org.jboss.jdf.example.ticketmonster.model.SectionAllocation;
 import org.jboss.jdf.example.ticketmonster.model.Show;
 
 /**
@@ -123,6 +126,10 @@ public class PerformanceBean implements Serializable
          if (this.id == null)
          {
             this.entityManager.persist(this.performance);
+            for (Section s : this.performance.getShow().getVenue().getSections())
+            {
+               this.entityManager.persist(new SectionAllocation(this.performance, s));
+            }
             return "search?faces-redirect=true";
          }
          else
@@ -149,6 +156,16 @@ public class PerformanceBean implements Serializable
          show.getPerformances().remove(deletableEntity);
          deletableEntity.setShow(null);
          this.entityManager.merge(show);
+         List<SectionAllocation> sectionAllocations = findSectionAllocationsByPerformance(deletableEntity);
+         for(SectionAllocation sectionAllocation: sectionAllocations)
+         {
+            this.entityManager.remove(sectionAllocation);
+         }
+         List<Booking> bookings = findBookingsByPerformance(deletableEntity);
+         for(Booking booking: bookings)
+         {
+            this.entityManager.remove(booking);
+         }
          this.entityManager.remove(deletableEntity);
          this.entityManager.flush();
          return "search?faces-redirect=true";
@@ -315,4 +332,26 @@ public class PerformanceBean implements Serializable
       this.add = new Performance();
       return added;
    }
+
+   public List<SectionAllocation> findSectionAllocationsByPerformance(Performance performance)
+   {
+      CriteriaQuery<SectionAllocation> criteria = this.entityManager
+            .getCriteriaBuilder().createQuery(SectionAllocation.class);
+      Root<SectionAllocation> from = criteria.from(SectionAllocation.class);
+      CriteriaBuilder builder = this.entityManager.getCriteriaBuilder();
+      Predicate performanceIsSame = builder.equal(from.get("performance"), performance);
+      return this.entityManager.createQuery(
+            criteria.select(from).where(performanceIsSame)).getResultList();
+   }
+
+   public List<Booking> findBookingsByPerformance(Performance performance)
+   {
+      CriteriaQuery<Booking> criteria = this.entityManager
+            .getCriteriaBuilder().createQuery(Booking.class);
+      Root<Booking> from = criteria.from(Booking.class);
+      CriteriaBuilder builder = this.entityManager.getCriteriaBuilder();
+      Predicate performanceIsSame = builder.equal(from.get("performance"), performance);
+      return this.entityManager.createQuery(
+            criteria.select(from).where(performanceIsSame)).getResultList();
+   }
 }
\ No newline at end of file
diff --git ../demo/src/main/java/org/jboss/jdf/examples/view/ShowBean.java ../demo/src/main/java/org/jboss/jdf/examples/view/ShowBean.java
index 6e0674d..09a8c86 100644
--- ../demo/src/main/java/org/jboss/jdf/examples/view/ShowBean.java
+++ ../demo/src/main/java/org/jboss/jdf/examples/view/ShowBean.java
@@ -3,7 +3,6 @@ package org.jboss.jdf.examples.view;
 import java.io.Serializable;
 import java.util.ArrayList;
 import java.util.List;
-
 import javax.annotation.Resource;
 import javax.ejb.SessionContext;
 import javax.ejb.Stateful;
@@ -13,6 +12,7 @@ import javax.faces.application.FacesMessage;
 import javax.faces.component.UIComponent;
 import javax.faces.context.FacesContext;
 import javax.faces.convert.Converter;
+import javax.faces.event.ValueChangeEvent;
 import javax.inject.Inject;
 import javax.inject.Named;
 import javax.persistence.EntityManager;
@@ -28,6 +28,7 @@ import org.jboss.jdf.example.ticketmonster.model.Show;
 import java.util.Iterator;
 import org.jboss.jdf.example.ticketmonster.model.Event;
 import org.jboss.jdf.example.ticketmonster.model.Performance;
+import org.jboss.jdf.example.ticketmonster.model.Section;
 import org.jboss.jdf.example.ticketmonster.model.TicketPrice;
 import org.jboss.jdf.example.ticketmonster.model.Venue;
 
@@ -336,4 +337,47 @@ public class ShowBean implements Serializable
       this.add = new Show();
       return added;
    }
+
+   public List<Venue> getAllVenues()
+   {
+      CriteriaQuery<Venue> criteria = this.entityManager
+            .getCriteriaBuilder().createQuery(Venue.class);
+      List<Venue> allVenues = this.entityManager.createQuery(
+            criteria.select(criteria.from(Venue.class))).getResultList();
+      Venue defaultVenue = allVenues.get(0);
+      if(this.getSelectedVenue() == null && defaultVenue != null)
+      {
+         this.setSelectedVenue(defaultVenue);
+      }
+      return allVenues;
+   }
+
+   public void setSelectedVenue(Venue venue)
+   {
+      this.show.setVenue(venue);
+   }
+
+   public Venue getSelectedVenue()
+   {
+      return this.show.getVenue();
+   }
+
+   public List<Section> getVenueSections()
+   {
+      Venue venue = getSelectedVenue();
+      if(venue == null || venue.getSections() == null)
+      {
+         return new ArrayList<Section>();
+      }
+      else
+      {
+         return new ArrayList<Section>(venue.getSections());
+      }
+   }
+
+   public void changeSelectedVenue(ValueChangeEvent event)
+   {
+      Venue newVenue = (Venue) event.getNewValue();
+      this.setSelectedVenue(newVenue);
+   }
 }
\ No newline at end of file
diff --git ../demo/src/main/webapp/admin/index.html ../demo/src/main/webapp/admin/index.html
index 7424c8f..4036f32 100644
--- ../demo/src/main/webapp/admin/index.html
+++ ../demo/src/main/webapp/admin/index.html
@@ -1 +1 @@
-<meta http-equiv="refresh" content="0;url=./faces/admin/index.xhtml" /> 
\ No newline at end of file
+<meta http-equiv="refresh" content="0;url=../faces/admin/index.xhtml" />
\ No newline at end of file
diff --git ../demo/src/main/webapp/admin/event/view.xhtml ../demo/src/main/webapp/admin/event/view.xhtml
index 451479f..6c30e3d 100644
--- ../demo/src/main/webapp/admin/event/view.xhtml
+++ ../demo/src/main/webapp/admin/event/view.xhtml
@@ -4,6 +4,7 @@
 	xmlns:h="http://java.sun.com/jsf/html"
 	xmlns:f="http://java.sun.com/jsf/core"
 	xmlns:ui="http://java.sun.com/jsf/facelets"
+    xmlns:tm="http://java.sun.com/jsf/composite/tm"
 	template="/resources/scaffold/pageTemplate.xhtml">
 
 	<f:metadata>
@@ -31,6 +32,7 @@
 			<h:outputLabel for="eventBeanEventMediaItem" value="Media Item:"/>
 			<h:link id="eventBeanEventMediaItem" outcome="/admin/mediaItem/view" value="#{eventBean.event.mediaItem}">
 				<f:param name="id" value="#{eventBean.event.mediaItem.id}"/>
+                <tm:image media="#{mediaManager.getPath(eventBean.event.mediaItem)}" />
 			</h:link>
 			<h:outputText/>
 			<h:outputLabel for="eventBeanEventCategory" value="Category:"/>
diff --git ../demo/src/main/webapp/admin/performance/create.xhtml ../demo/src/main/webapp/admin/performance/create.xhtml
index a728418..9567457 100644
--- ../demo/src/main/webapp/admin/performance/create.xhtml
+++ ../demo/src/main/webapp/admin/performance/create.xhtml
@@ -47,7 +47,7 @@
 				<h:outputText value="*"/>
 				<h:outputLabel for="performanceBeanPerformanceDate" value="Date:"/>
 				<h:panelGroup>
-					<rich:calendar datePattern="MMM d, yyyy hh:mm:ss a" id="performanceBeanPerformanceDate" required="true" value="#{performanceBean.performance.date}">
+					<rich:calendar datePattern="MMM d, yyyy hh:mm:ss a" id="performanceBeanPerformanceDate" required="true" value="#{performanceBean.performance.date}" showApplyButton="true">
 						<f:convertDateTime pattern="MMM d, yyyy hh:mm:ss a" type="both"/>
 					</rich:calendar>
 					<h:message for="performanceBeanPerformanceDate" styleClass="error"/>
diff --git ../demo/src/main/webapp/admin/show/create.xhtml ../demo/src/main/webapp/admin/show/create.xhtml
index aa1c904..6355741 100644
--- ../demo/src/main/webapp/admin/show/create.xhtml
+++ ../demo/src/main/webapp/admin/show/create.xhtml
@@ -61,7 +61,7 @@
 								</h:outputText>
 							</h:link>
 							<f:facet name="footer">
-								<rich:calendar datePattern="MMM d, yyyy hh:mm:ss a" id="performanceBeanAddDate" value="#{performanceBean.add.date}">
+								<rich:calendar datePattern="MMM d, yyyy hh:mm:ss a" id="performanceBeanAddDate" value="#{performanceBean.add.date}" showApplyButton="true">
 									<f:convertDateTime pattern="MMM d, yyyy hh:mm:ss a" type="both"/>
 								</rich:calendar>
 								<h:message for="performanceBeanAddDate" styleClass="error"/>
@@ -80,8 +80,8 @@
 				<h:outputText/>
 				<h:outputLabel for="showBeanShowVenue" value="Venue:"/>
 				<h:panelGroup>
-					<h:selectOneMenu converter="#{venueBean.converter}" id="showBeanShowVenue" required="true" value="#{showBean.show.venue}">
-						<f:selectItems value="#{venueBean.all}"/>
+					<h:selectOneMenu converter="#{venueBean.converter}" id="showBeanShowVenue" required="true" value="#{showBean.selectedVenue}" onchange="submit()" valueChangeListener="#{showBean.changeSelectedVenue}">
+						<f:selectItems value="#{showBean.allVenues}"/>
 					</h:selectOneMenu>
 					<h:message for="showBeanShowVenue" styleClass="error"/>
 				</h:panelGroup>
@@ -100,7 +100,7 @@
 							</h:link>
 							<f:facet name="footer">
 								<h:selectOneMenu converter="#{sectionBean.converter}" id="ticketPriceBeanAddSection" value="#{ticketPriceBean.add.section}">
-									<f:selectItems value="#{sectionBean.all}"/>
+									<f:selectItems value="#{showBean.venueSections}"/>
 								</h:selectOneMenu>
 								<h:message for="ticketPriceBeanAddSection" styleClass="error"/>
 							</f:facet>
diff --git ../demo/src/main/webapp/admin/venue/view.xhtml ../demo/src/main/webapp/admin/venue/view.xhtml
index 06edc33..b3809c4 100644
--- ../demo/src/main/webapp/admin/venue/view.xhtml
+++ ../demo/src/main/webapp/admin/venue/view.xhtml
@@ -4,6 +4,7 @@
 	xmlns:h="http://java.sun.com/jsf/html"
 	xmlns:f="http://java.sun.com/jsf/core"
 	xmlns:ui="http://java.sun.com/jsf/facelets"
+    xmlns:tm="http://java.sun.com/jsf/composite/tm"
 	xmlns:forgeview="http://jboss.org/forge/view"
 	template="/resources/scaffold/pageTemplate.xhtml">
 
@@ -44,7 +45,8 @@
 			<h:outputText/>
 			<h:outputLabel for="venueBeanVenueMediaItem" value="Media Item:"/>
 			<h:link id="venueBeanVenueMediaItem" outcome="/admin/mediaItem/view" value="#{venueBean.venue.mediaItem}">
-				<f:param name="id" value="#{venueBean.venue.mediaItem.id}"/>
+                <tm:image media="#{mediaManager.getPath(venueBean.venue.mediaItem)}" />
+                <f:param name="id" value="#{venueBean.venue.mediaItem.id}"/>
 			</h:link>
 			<h:outputText/>
 			<h:outputLabel for="venueBeanVenueDescription" value="Description:"/>
diff --git ../demo/src/main/webapp/resources/tm/image.xhtml ../demo/src/main/webapp/resources/tm/image.xhtml
new file mode 100644
index 0000000..ceafffb
--- /dev/null
+++ ../demo/src/main/webapp/resources/tm/image.xhtml
@@ -0,0 +1,25 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
+        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml"
+      xmlns:h="http://java.sun.com/jsf/html"
+      xmlns:composite="http://java.sun.com/jsf/composite">
+<head>
+    <title>Cached Image</title>
+</head>
+<body>
+
+<composite:interface>
+    <composite:attribute name="media"
+                         type="org.jboss.jdf.example.ticketmonster.service.MediaPath" />
+    <composite:attribute name="id" type="java.lang.String" />
+</composite:interface>
+
+<composite:implementation>
+    <h:graphicImage value="#{cc.attrs.media.url}"
+                    rendered="#{!cc.attrs.media.cached}" />
+    <h:graphicImage value="/rest/media/cache/#{cc.attrs.media.url}"
+                    rendered="#{cc.attrs.media.cached}" />
+</composite:implementation>
+
+</body>
+</html>
\ No newline at end of file
diff --git ../demo/src/main/webapp/WEB-INF/web.xml ../demo/src/main/webapp/WEB-INF/web.xml
index 2bca387..49e2dc4 100644
--- ../demo/src/main/webapp/WEB-INF/web.xml
+++ ../demo/src/main/webapp/WEB-INF/web.xml
@@ -36,7 +36,4 @@
   <session-config>
     <session-timeout>30</session-timeout>
   </session-config>
-  <welcome-file-list>
-    <welcome-file>faces/index.xhtml</welcome-file>
-  </welcome-file-list>
 </web-app>
